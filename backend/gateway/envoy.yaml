admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 8081 }

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: "/dev/stdout"
                      typed_json_format:
                        start_time: "[%START_TIME%]"
                        method: "%REQ(:METHOD)%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                        protocol: "%PROTOCOL%"
                        response_code: "%RESPONSE_CODE%"
                        response_flags: "%RESPONSE_FLAGS%"
                        bytes_received: "%BYTES_RECEIVED%"
                        bytes_sent: "%BYTES_SENT%"
                        duration: "%DURATION%"
                        x_envoy_upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                        x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                        user_agent: "%REQ(USER-AGENT)%"
                        x_request_id: "%REQ(X-REQUEST-ID)%"
                        authority: "%REQ(:AUTHORITY)%"
                        upstream_host: "%UPSTREAM_HOST%"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: /identity.Auth
                          route:
                            cluster: identity_cluster
                            max_grpc_timeout: 0s
                        - match:
                            prefix: /upload
                          route:
                            cluster: upload_cluster
                            prefix_rewrite: /
                            timeout: 60s
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: "1728000"
                        expose_headers: grpc-status,grpc-message
                http_filters:
                  - name: envoy.filters.http.cors
                  - name: envoy.filters.http.health_check
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                      pass_through_mode: false
                      headers:
                        - exact_match: /status
                          name: :path
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        provider_wetalk_identity:
                          issuer: WeTalk
                          remote_jwks:
                            http_uri:
                              uri: http://identity:8081/oauth2/certs
                              cluster: identity_jwks_cluster
                              timeout:
                                seconds: 30
                            cache_duration:
                              seconds: 300
                          from_headers:
                            - name: Authorization
                              value_prefix: "Bearer "
                          forward: false
                          forward_payload_header: x-jwt-payload
                          payload_in_metadata: verified_jwt
                      rules:
                        - match:
                            prefix: /profile.Profile/Update
                          requires:
                            provider_name: provider_wetalk_identity
                        - match:
                            prefix: /upload
                          requires:
                            provider_name: provider_wetalk_identity
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          local meta = request_handle:streamInfo():dynamicMetadata("envoy.filters.http.jwt_authn")
                          for key, value in pairs(meta) do
                            request_handle:headers():add("x-wetalk-userid", value["verified_jwt"]["sub"])
                          end
                        end
                  - name: envoy.filters.http.router
  clusters:
    - name: identity_cluster
      connect_timeout: 1s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: identity_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: identity
                      port_value: 8080
    - name: upload_cluster
      connect_timeout: 1s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: upload_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: upload
                      port_value: 8080
    - name: identity_jwks_cluster
      connect_timeout: 1s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: identity_jwks_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: identity
                      port_value: 8081
